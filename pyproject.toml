

[project]


name = "mcp-architecton"
version = "0.1.0"
description = "MCP server for analyzing and introducing Python design patterns"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Your Name" }]
keywords = ["mcp", "design-patterns", "python", "refactoring", "analysis"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "ast-grep-py>=0.39.4",
    "astroid>=3.3.11",
    "fastmcp>=2.11.3",
    "jinja2>=3.1.6",
    "libcst>=1.8.2",
    "parso>=0.8.4",
    "radon>=6.0.1",
    "redbaron>=0.9.2",
    "rope>=1.14.0",
    "ruff>=0.12.9",
    "tree-sitter>=0.25.1",
    "tree-sitter-languages>=1.10.2",
    "tree-sitter-python>=0.23.6",
]
[project.scripts]
mcp-architecton = "mcp_architecton.server:main"
architecton-local = "scripts.run_server:main"
architecton-presets = "mcp_architecton.tools.presets_cli:main"
architecton = "mcp_architecton.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"demo/*.py" = ["I001"]

[tool.pytest.ini_options]
addopts = "-q --cov=src/mcp_architecton --cov-report=term-missing:skip-covered --cov-report=xml:coverage.xml"
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["src/mcp_architecton"]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == \"__main__\":",
    'def __repr__\(\):',
    'def __str__\(\):',
]

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_architecton"]

[dependency-groups]
dev = ["pytest>=8.4.1", "pytest-cov>=6.2.1", "tox>=4.28.4", "tox-uv>=1.28.0"]
