[tox]
requires =
	tox>=4.28
	tox-uv>=1.28
env_list =
	pre-commit
	py{310,311,312}
	lint
	coverage
	type-check
	security
	docs-check
skip_missing_interpreters = true

[testenv]
description = run unit tests with coverage
package = wheel
wheel_build_env = .pkg
deps =
	pytest>=8.4.1
	pytest-cov>=6.2.1
	pytest-xdist>=3.3.0
commands =
	pytest -q --cov=src/mcp_architecton --cov-report=term-missing:skip-covered --cov-report=xml:coverage.xml {posargs}

[testenv:lint]
description = run ruff lint checks
skip_install = true
deps =
	ruff>=0.13.0
commands =
	ruff check . {posargs}
	ruff format --check . {posargs}

[testenv:lint-fix]
description = run ruff lint with auto-fixes
skip_install = true
deps =
	ruff>=0.13.0
commands =
	ruff check --fix . {posargs}
	ruff format . {posargs}

[testenv:type-check]
description = run type checking with mypy
skip_install = false
deps =
	mypy>=1.18.0
	types-requests
commands =
	mypy src/mcp_architecton {posargs}

[testenv:coverage]
description = run coverage report with HTML output
deps =
	pytest>=8.4.1
	pytest-cov>=6.2.1
commands =
	pytest --cov=src/mcp_architecton --cov-report=term-missing --cov-report=html --cov-fail-under=65

[testenv:security]
description = run security checks with bandit
skip_install = true
deps =
	bandit[toml]>=1.7.0
	safety>=3.0.0
commands =
	bandit -r src/ -f json -o bandit-report.json
	bandit -r src/ -f screen
	safety check --json --output safety-report.json || true
	safety check

[testenv:docs-check]
description = check documentation quality and links
skip_install = true
deps =
	doc8>=1.1.0
	markdown>=3.5.0
commands =
	doc8 README.md --max-line-length=120
	python -m markdown README.md > /dev/null

[testenv:pre-commit]
description = run full pre-commit suite (ruff, formatting, pyupgrade, hygiene)
skip_install = true
deps =
	pre-commit>=4.0.0
commands =
	pre-commit run --all-files --show-diff-on-failure

[testenv:pre-commit-update]
description = update pre-commit hook versions
skip_install = true
deps =
	pre-commit>=4.0.0
commands =
	pre-commit autoupdate
