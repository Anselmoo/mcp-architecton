"""Common name aliases for snippet keys.

Maps free-form names to canonical snippet keys used by generators.
"""

from __future__ import annotations

NAME_ALIASES: dict[str, str] = {
    # Patterns (canonical keys)
    "strategy": "strategy",
    "singleton": "singleton",
    "facade": "facade",
    "facade function": "facade_function",
    "observer": "observer",
    "command": "command",
    "adapter": "adapter",
    "decorator": "decorator",
    "bridge": "bridge",
    "builder": "builder",
    "composite": "composite",
    "abstract factory": "abstract_factory",
    "factory method": "factory_method",
    "factory_method": "factory_method",
    "factory": "factory",
    "flyweight": "flyweight",
    "iterator": "iterator",
    "mediator": "mediator",
    "prototype": "prototype",
    "proxy": "proxy",
    "state": "state",
    "template method": "template_method",
    "template_method": "template_method",
    "publish-subscribe": "publish_subscribe",
    "publish_subscribe": "publish_subscribe",
    "blackboard": "blackboard",
    "borg": "borg",
    "catalog": "catalog",
    "chain of responsibility": "chain_of_responsibility",
    "chain_of_responsibility": "chain_of_responsibility",
    "chaining method": "chaining_method",
    "chaining_method": "chaining_method",
    "visitor": "visitor",
    "front controller": "front_controller",
    "front_controller": "front_controller",
    "dependency injection": "dependency_injection",
    "di": "dependency_injection",
    "delegation pattern": "delegation_pattern",
    "delegation_pattern": "delegation_pattern",
    "graph search": "graph_search",
    "graph_search": "graph_search",
    "hsm": "hsm",
    "lazy evaluation": "lazy_evaluation",
    "lazy_evaluation": "lazy_evaluation",
    "memento": "memento",
    "pool": "pool",
    "registry": "registry",
    "specification": "specification",
    # Architectural helpers
    "repository": "repository",
    "repo": "repository",
    "unit of work": "unit_of_work",
    "unit_of_work": "unit_of_work",
    "uow": "unit_of_work",
    "service layer": "service_layer",
    "service_layer": "service_layer",
    "message bus": "message_bus",
    "message_bus": "message_bus",
    "domain events": "domain_events",
    "domain_events": "domain_events",
    "cqrs": "cqrs",
    # High-level styles (may map to helper scaffolds)
    "hexagonal": "hexagonal",
    "ports and adapters": "hexagonal",
    "layered": "layered",
    "mvc": "mvc",
    "clean": "clean",
    "three tier": "three_tier",
    "3 tier": "three_tier",
    "3-tier": "three_tier",
}

__all__ = ["NAME_ALIASES"]
